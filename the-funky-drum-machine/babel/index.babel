const projectName = 'drum-machine';
localStorage.setItem('example_project', 'Drum Machine');

const buttonLetters = 'QWEASDZXC';
const buttonsArray = [
  {letter: 'Q',
   audioClipName: 'Chord-1',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'
  },
  {letter: 'W',
   audioClipName: 'Chord-2',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'
  },
  {letter: 'E',
   audioClipName: 'Chord-3',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'
  },
  {letter: 'A',
   audioClipName: 'Closed-HH',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'
  },
  {letter: 'S',
   audioClipName: 'Open-HH',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'
  },
  {letter: 'D',
   audioClipName: 'Heater-2',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'
  },
  {letter: 'Z',
   audioClipName: 'Clap',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'
  },
  {letter: 'X',
   audioClipName: 'Side-Stick',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'
  },
  {letter: 'C',
   audioClipName: 'Snare',
   audioClip: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'
  }
];

class Button extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
    }
    this.componentDidMount = this.componentDidMount.bind(this);
    this.componentWillUnmount = this.componentWillUnmount.bind(this);
    this.handleKeyPress = this.handleKeyPress.bind(this);
    this.playSound = this.playSound.bind(this);
  }
  componentDidMount() {
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  handleKeyPress(e) {
    if (String.fromCharCode(e.keyCode) === this.props.buttonObj.letter) {
      this.playSound();
    }
  }
    
  playSound(e) {
    const sound = document.getElementById(this.props.buttonObj.letter);
    sound.currentTime = 0;
    sound.play();
    this.props.updateDisplay(this.props.buttonObj.audioClipName);
    console.log(this.props);
    // this.activatePad();
    // setTimeout(() => this.activatePad(), 100);
    // this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));
  }
  
  render() {
    return (
      <div id={this.props.buttonObj.audioClipName}
        className="drum-pad" 
        onClick={this.playSound}>
        <audio className='clip' 
          id={this.props.buttonObj.letter} 
          src={this.props.buttonObj.audioClip}>
        </audio>
        {this.props.buttonObj.letter}
      </div>
    )
  }
};

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      display: 'Be Funky'
    }
    this.displayClipName = this.displayClipName.bind(this);
    this.buttonsTable = this.buttonsTable.bind(this);
  }
  
  displayClipName(name) {
    this.setState({
      display: name
    });
  }
  
  buttonsTable() {
    return (
      <table>
        <tr>
          <td>
            <Button 
              buttonObj={buttonsArray[0]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[1]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[2]}
              updateDisplay={this.displayClipName} />
          </td>
        </tr>
        <tr>
          <td>
            <Button 
              buttonObj={buttonsArray[3]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[4]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[5]}
              updateDisplay={this.displayClipName} />
          </td>
        </tr>
        <tr>
          <td>
            <Button 
              buttonObj={buttonsArray[6]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[7]}
              updateDisplay={this.displayClipName} />
          </td>
          <td>
            <Button 
              buttonObj={buttonsArray[8]}
              updateDisplay={this.displayClipName} />
          </td>
        </tr>
      </table>
    )
  }
  
  render() {
    return (
      <div>
        <h1>The Funky Drum Machine</h1>
        <div id="drum-machine" className="inner-container">
          <div>
            <this.buttonsTable />
          </div>
        </div>
        <div id="display">
          {this.state.display}
        </div>
      </div>
    )
  }
};

ReactDOM.render(
  <App />,
  document.getElementById('app')
);